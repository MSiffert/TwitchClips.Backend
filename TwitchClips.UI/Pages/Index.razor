@page "/"
@using TwitchClips.Common.Models

<InfiniteScroll OnScrollToEnd="@GetItems">
    <MudContainer Class="main-container">
        <div class="d-flex">
            <div class="navigation">

            </div>

            <div class="clips-container">
                <Virtualize Items="Clips" ItemSize="680" Context="clip">
                    <div class="clip">
                        <iframe
                            src="@(clip.EmbedUrl + "&parent=localhost:5000")"
                            frameborder="0"
                            muted="false"
                            height="100%"
                            width="100%"
                            allowfullscreen="true">
                        </iframe>
                    </div>    
                </Virtualize>
            </div>
        </div>
    </MudContainer>
</InfiniteScroll>

<style>
    .main-container {
        min-height: 100%;
        margin-top: 0;
        margin-bottom: 0;
    }

    .navigation {
        width: 300px;
        background-color: red;
    }
    
    .clips-container {
        padding-left: 3rem;
        padding-right: 3rem;
    }

    .clip {
        width: 640px;
        height: 360px;
        margin-bottom: 2rem;
    }
</style>

@code {

    [Inject]
    public HttpClient HttpClient { get; set; }
    
    public List<Clip> Clips { get; set; }

    public Index()
    {
        Clips = new List<Clip>();
    }
    
    protected override async Task OnInitializedAsync()
    {
        await GetItems();
    }
    
    public async Task GetItems()
    {
        var clips = await HttpClient.GetAsync("clips?gameId=21779");
        var response = await clips.Content.ReadFromJsonAsync<ClipsResponse>() ?? throw new Exception();
        Clips.AddRange(response.Data);
    }
}